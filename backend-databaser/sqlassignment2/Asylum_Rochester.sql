-- MySQL Script generated by MySQL Workbench
-- Tue Apr  4 18:59:05 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema asylum
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema asylum
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `asylum` DEFAULT CHARACTER SET utf8 ;
USE `asylum` ;

-- -----------------------------------------------------
-- Table `asylum`.`diagnos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`diagnos` (
  `diagnosID` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NULL DEFAULT NULL,
  `symptom` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`diagnosID`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `asylum`.`doctors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`doctors` (
  `doctorID` INT(11) NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(30) NULL DEFAULT NULL,
  `lastName` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`doctorID`))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `asylum`.`patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`patient` (
  `patientID` INT(11) NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(30) NULL DEFAULT NULL,
  `lastName` VARCHAR(30) NULL DEFAULT NULL,
  `doctorID` INT(11) NOT NULL,
  PRIMARY KEY (`patientID`),
  INDEX `fk_doctor` (`doctorID` ASC),
  CONSTRAINT `fk_doctor`
    FOREIGN KEY (`doctorID`)
    REFERENCES `asylum`.`doctors` (`doctorID`))
ENGINE = InnoDB
AUTO_INCREMENT = 16
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `asylum`.`diagnos_patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`diagnos_patient` (
  `diagnosID` INT(11) NOT NULL,
  `patientID` INT(11) NOT NULL,
  PRIMARY KEY (`diagnosID`, `patientID`),
  INDEX `fk_pd` (`patientID` ASC),
  CONSTRAINT `fk_dp`
    FOREIGN KEY (`diagnosID`)
    REFERENCES `asylum`.`diagnos` (`diagnosID`),
  CONSTRAINT `fk_pd`
    FOREIGN KEY (`patientID`)
    REFERENCES `asylum`.`patient` (`patientID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `asylum`.`medicin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`medicin` (
  `medicinID` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `diagnosID` INT(11) NOT NULL,
  `dose` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`medicinID`),
  INDEX `fk_diagnos` (`diagnosID` ASC),
  CONSTRAINT `fk_diagnos`
    FOREIGN KEY (`diagnosID`)
    REFERENCES `asylum`.`diagnos` (`diagnosID`))
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `asylum`.`nurse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`nurse` (
  `nurseID` INT(11) NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(30) NULL DEFAULT NULL,
  `lastName` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`nurseID`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `asylum`.`nurse_patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`nurse_patient` (
  `nurseID` INT(11) NOT NULL,
  `patientID` INT(11) NOT NULL,
  PRIMARY KEY (`nurseID`, `patientID`),
  INDEX `fk_pn` (`patientID` ASC),
  CONSTRAINT `fk_np`
    FOREIGN KEY (`nurseID`)
    REFERENCES `asylum`.`nurse` (`nurseID`),
  CONSTRAINT `fk_pn`
    FOREIGN KEY (`patientID`)
    REFERENCES `asylum`.`patient` (`patientID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

USE `asylum` ;

-- -----------------------------------------------------
-- Placeholder table for view `asylum`.`quest1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`quest1` (`name` INT, `antal insjukna` INT);

-- -----------------------------------------------------
-- Placeholder table for view `asylum`.`quest2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`quest2` (`antal insjukna` INT);

-- -----------------------------------------------------
-- Placeholder table for view `asylum`.`quest3`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`quest3` (`name` INT, `dose` INT);

-- -----------------------------------------------------
-- Placeholder table for view `asylum`.`quest4`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`quest4` (`firstName` INT, `lastName` INT);

-- -----------------------------------------------------
-- Placeholder table for view `asylum`.`quest5`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `asylum`.`quest5` (`firstName` INT, `lastName` INT);

-- -----------------------------------------------------
-- procedure input_diagnos
-- -----------------------------------------------------

DELIMITER $$
USE `asylum`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `input_diagnos`(in i_name varchar(30), in i_symptom varchar(255))
begin
  insert into diagnos (name, symptom)
  values (i_name, i_symptom);
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure rabies
-- -----------------------------------------------------

DELIMITER $$
USE `asylum`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `rabies`()
begin   select count(pat.patientID) as 'Antal insjuknade i Rabies'   from diagnos_patient dp   join patient pat on dp.patientID = pat.patientID   join diagnos dia on dp.diagnosID = dia.diagnosID   where dia.diagnosID = 5; end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure three
-- -----------------------------------------------------

DELIMITER $$
USE `asylum`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `three`()
begin
  select 'q1' as '';
  select * from quest1;
  select 'q2' as '';
  select * from quest2;
  select 'q3' as '';
  select * from quest3;
  select 'q4' as '';
  select * from quest4;
  select 'q5' as '';
  select * from quest5;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- View `asylum`.`quest1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `asylum`.`quest1`;
USE `asylum`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `asylum`.`quest1` AS select `dia`.`name` AS `name`,count(`pat`.`patientID`) AS `antal insjukna` from ((`asylum`.`diagnos_patient` `dp` join `asylum`.`patient` `pat` on((`dp`.`patientID` = `pat`.`patientID`))) join `asylum`.`diagnos` `dia` on((`dp`.`diagnosID` = `dia`.`diagnosID`))) group by `dia`.`diagnosID`;

-- -----------------------------------------------------
-- View `asylum`.`quest2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `asylum`.`quest2`;
USE `asylum`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `asylum`.`quest2` AS select count(`asylum`.`patient`.`patientID`) AS `antal insjukna` from `asylum`.`patient`;

-- -----------------------------------------------------
-- View `asylum`.`quest3`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `asylum`.`quest3`;
USE `asylum`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `asylum`.`quest3` AS select `med`.`name` AS `name`,`med`.`dose` AS `dose` from (`asylum`.`medicin` `med` join `asylum`.`diagnos` `dia` on((`med`.`diagnosID` = `dia`.`diagnosID`))) where (`dia`.`diagnosID` = 4) group by `med`.`name`;

-- -----------------------------------------------------
-- View `asylum`.`quest4`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `asylum`.`quest4`;
USE `asylum`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `asylum`.`quest4` AS select `nu`.`firstName` AS `firstName`,`nu`.`lastName` AS `lastName` from ((`asylum`.`nurse_patient` `np` join `asylum`.`patient` `pat` on((`np`.`patientID` = `pat`.`patientID`))) join `asylum`.`nurse` `nu` on((`np`.`nurseID` = `nu`.`nurseID`))) where (`pat`.`patientID` = 4);

-- -----------------------------------------------------
-- View `asylum`.`quest5`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `asylum`.`quest5`;
USE `asylum`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `asylum`.`quest5` AS select `pat`.`firstName` AS `firstName`,`pat`.`lastName` AS `lastName` from (`asylum`.`patient` `pat` join `asylum`.`doctors` `dr` on((`pat`.`doctorID` = `dr`.`doctorID`))) where (`dr`.`doctorID` = 2);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
